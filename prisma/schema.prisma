// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
    id            String    @id @default(uuid())
    name          String
    gitUrl        String    @map("git_url")
    subDomain     String   @unique @map("subdomain") 
    customDomain  String?   @map("custdomain")
    userId        String
    user          User      @relation(fields: [userId], references: [id])
    deployments   Deployment[]
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    @@map("projects")
}
model Deployment {
  id       String @id @default(uuid())
  project  Project @relation(fields: [projectId], references: [id])
  projectId String @map("project_id")
  status DeploymentStatus @default(NOT_STARTED)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}


model User {
    id            String    @id @default(uuid())
    username      String    @unique
    email         String    @unique
    password_hash String
    first_name    String?
    last_name     String?
    profile_picture String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    projects      Project[] // One-to-many relationship

    @@map("users")
}
enum DeploymentStatus {
   QUEUED
   IN_PROGRESS
   READY
   FAIL
   NOT_STARTED
}
